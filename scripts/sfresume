#!/usr/bin/env python

import argparse
import sys

from os import getcwd
from os.path import exists
from seisflows.tools import unix
from seisflows.config import config, tilde_expand, Dict
from seisflows.tools.tools import loadpy, loadyaml


def getargs():
    parser = argparse.ArgumentParser()

    parser.add_argument('--workdir', nargs='?', 
        default=os.getcwd())

    parser.add_argument('--parameter_file', nargs='?', 
        default='parameters.yaml')

    parser.add_argument('--path_file', nargs='?', 
        default='paths.yaml')

    return parser.parse_args()


if __name__ == "__main__":
    ### workflow submission script
    args = getargs()

    # check input files
    if not exists(args.parameter_file) or\
       not exists(args.path_file):

       # fall back to legacy filenames
        if exists('parameters.py') and\
           exists('paths.py'):
            args.parameter_file = 'parameters.py'
            args.path_file = 'paths.py'

        else:
            raise Exception('Input files not found.')


    if '.py' in args.parameter_file:
        load = loadpy
    else:
        load = loadyaml

    # register parameters
    parameters = load(args.parameter_file)
    sys.modules['seisflows_parameters'] = Dict(parameters)

    # register paths
    paths = tilde_expand(load(args.path_file))
    sys.modules['seisflows_paths'] = Dict(paths)

    unix.mkdir(args.workdir)
    unix.cd(args.workdir)

    # reload objects
    for name in names:
        fullfile = join(args.workdir, 'output', 'seisflows_'+name+'.p')
        sys.modules['seisflows_'+name] = loadobj(fullfile)

    # parameter checking
    for name in names:
        sys.modules['seisflows_'+name].check()

    # submit workflow
    workflow = sys.modules['seisflows_workflow']
    system = sys.modules['seisflows_system']
    system.submit(workflow)

